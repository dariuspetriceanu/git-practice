// ... (import statements)

const Maturity = () => {
  const [maturity, setMaturity] = useState([]);

  useEffect(() => {
    getMaturityFromAPI();
  }, []);

  const getMaturityFromAPI = () => {
    getAllMaturity()
      .then((res) => {
        setMaturity(res.data);
      })
      .catch((err) => {
        setMaturity([]);
        console.log(err);
      });
  };

  const currentDate = new Date('2021-08-08'); // August 8, 2021

  const filteredMaturity = maturity.filter((mat) => {
    if (!mat.maturityDate) {
      return false; // Skip items without maturityDate
    }

    const [day, month, year] = mat.maturityDate.split('-').map(Number);
    const maturityDate = new Date(year, month - 1, day); // Adjust month to 0-based index
    const timeDiff = maturityDate.getTime() - currentDate.getTime();
    const daysDiff = timeDiff / (1000 * 3600 * 24);

    console.log('Maturity Date:', mat.maturityDate);
    console.log('Parsed Date:', maturityDate);
    console.log('Days Diff:', daysDiff);

    return daysDiff <= 5 && daysDiff >= 0;
  });

  console.log('Filtered Maturity:', filteredMaturity);

  return (
    <Table striped bordered hover>
      <thead>
        <tr>
          <th>id</th>
          <th>status</th>
          <th>type</th>
          <th>trade date</th>
          <th>maturity date</th>
          <th>trade settlement date</th>
        </tr>
      </thead>
      <tbody>
        {filteredMaturity.map((mat) => (
          <MaturityDetail info={mat} key={mat.id.toString()} />
        ))}
      </tbody>
    </Table>
  );
};

export default Maturity;
